{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger with Laravel",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "ad77fe138bcb384ad65d167d5c8d1cc0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Test User"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Register Successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate user and generate API token",
                "operationId": "bae68d1c55329ecb6e41f48285840c8f",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged in Successfully!"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|Xb8d5JzLQ3TvV7gE9hF2cMnNpKsWrYtZu"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get authenticated user",
                "operationId": "13b43df400e475a157538f73617b8c3d",
                "responses": {
                    "200": {
                        "description": "Authenticated user data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Test User"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user and revoke API token",
                "operationId": "c5cdd87fdbf9d0f95dede875bd023dec",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get all projects",
                "operationId": "8a48f62abebb21637942cb7cab09b432",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "projects": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "user_id": {
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "tags": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "github_url": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Create a new project",
                "operationId": "1fa99730c48063d63c839811a6fac77b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Project Name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Project Description"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "tag1",
                                            "tag2"
                                        ]
                                    },
                                    "github_url": {
                                        "type": "string",
                                        "example": "https://github.com/TestUser/test-repo"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "planning"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "created_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-10-01T12:00:00Z"
                                    },
                                    "updated_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-10-01T12:00:00Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Project created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "project": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Project Name"
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Project Description"
                                                },
                                                "tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": [
                                                            "tag1",
                                                            "tag2"
                                                        ]
                                                    }
                                                },
                                                "github_url": {
                                                    "type": "string",
                                                    "example": "https://github.com/TestUser/test-repo"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "planning"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "description": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The description field is required."
                                                    }
                                                },
                                                "status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected status is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/projects/{id}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get a specific project",
                "operationId": "24bd51bf40980914c88562c2b80d5658",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "project": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Project Name"
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Project Description"
                                                },
                                                "tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": [
                                                            "tag1",
                                                            "tag2"
                                                        ]
                                                    }
                                                },
                                                "github_url": {
                                                    "type": "string",
                                                    "example": "https://github.com/TestUser/test-repo"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "planning"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Project not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Delete a project",
                "operationId": "daf9f94b2b9c1cd8f64bab4547da123a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Project deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Project not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/projects/{project}/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Retrieve all tasks for a specific project",
                "operationId": "c7c57f5e63f2170dce8830a176c66a8e",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "ID of the project to retrieve tasks from",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task list retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task list retrieved successfully."
                                        },
                                        "task": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "project_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Task Title"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Task Description"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "todo",
                                                        "in_progress",
                                                        "done"
                                                    ],
                                                    "example": "todo"
                                                },
                                                "priority": {
                                                    "type": "string",
                                                    "enum": [
                                                        "low",
                                                        "medium",
                                                        "high"
                                                    ],
                                                    "example": "low"
                                                },
                                                "deadline": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-10-01T00:00:00Z"
                                                },
                                                "is_recurring": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-10-01T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-10-01T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Project not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task for a specific project",
                "operationId": "a34c8b90a4a8f36d4b028dd94ff47d13",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "ID of the project to create a task for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Task Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Task Description"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "todo",
                                            "in_progress",
                                            "done"
                                        ],
                                        "example": "todo"
                                    },
                                    "priority": {
                                        "type": "string",
                                        "enum": [
                                            "low",
                                            "medium",
                                            "high"
                                        ],
                                        "example": "low"
                                    },
                                    "deadline": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-10-01T00:00:00Z"
                                    },
                                    "is_recurring": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task created successfully."
                                        },
                                        "task": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "project_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Task Title"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Task Description"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "todo",
                                                        "in_progress",
                                                        "done"
                                                    ],
                                                    "example": "todo"
                                                },
                                                "priority": {
                                                    "type": "string",
                                                    "enum": [
                                                        "low",
                                                        "medium",
                                                        "high"
                                                    ],
                                                    "example": "low"
                                                },
                                                "deadline": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-10-01T00:00:00Z"
                                                },
                                                "is_recurring": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-10-01T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-10-01T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The status field is required."
                                                    }
                                                },
                                                "priority": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The priority field is required."
                                                    }
                                                },
                                                "deadline": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The deadline field must be a valid date."
                                                    }
                                                },
                                                "is_recurring": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The is recurring field must be true or false."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Retrieve all tasks",
                "operationId": "e8c61b3ff3cdb81e1d35e6d17452499f",
                "responses": {
                    "200": {
                        "description": "Task list retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task list retrieved successfully."
                                        },
                                        "task": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "project_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Task Title"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Task Description"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "todo",
                                                        "in_progress",
                                                        "done"
                                                    ],
                                                    "example": "todo"
                                                },
                                                "priority": {
                                                    "type": "string",
                                                    "enum": [
                                                        "low",
                                                        "medium",
                                                        "high"
                                                    ],
                                                    "example": "low"
                                                },
                                                "deadline": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-10-01T00:00:00Z"
                                                },
                                                "is_recurring": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-10-01T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-10-01T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/projects/{project}/tasks/{task}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Retrieve a specific task from a project",
                "description": "Returns details of a specific task belonging to the specified project.",
                "operationId": "dd76aa4b8467d0caf1c5f29d5b20a068",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "ID of the project",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task retrieved successfully."
                                        },
                                        "task": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "project_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Task Title"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Task Description"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "todo",
                                                        "in_progress",
                                                        "done"
                                                    ],
                                                    "example": "todo"
                                                },
                                                "priority": {
                                                    "type": "string",
                                                    "enum": [
                                                        "low",
                                                        "medium",
                                                        "high"
                                                    ],
                                                    "example": "low"
                                                },
                                                "deadline": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-10-01T00:00:00Z"
                                                },
                                                "is_recurring": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-10-01T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-10-01T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Task not found in this project."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Project not found."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update a specific task in a project",
                "operationId": "110a25b0b4b57502fd379e30ef1ef7d3",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "ID of the project",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Task Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated Task Description"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "todo",
                                            "in_progress",
                                            "done"
                                        ],
                                        "example": "in_progress"
                                    },
                                    "priority": {
                                        "type": "string",
                                        "enum": [
                                            "low",
                                            "medium",
                                            "high"
                                        ],
                                        "example": "medium"
                                    },
                                    "deadline": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-10-01T00:00:00Z"
                                    },
                                    "is_recurring": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task updated successfully."
                                        },
                                        "task": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "project_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Updated Task Title"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated Task Description"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "todo",
                                                        "in_progress",
                                                        "done"
                                                    ],
                                                    "example": "in_progress"
                                                },
                                                "priority": {
                                                    "type": "string",
                                                    "enum": [
                                                        "low",
                                                        "medium",
                                                        "high"
                                                    ],
                                                    "example": "medium"
                                                },
                                                "deadline": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-10-01T00:00:00Z"
                                                },
                                                "is_recurring": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-10-01T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-10-01T00:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Task not found in this project."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Project not found."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                },
                                                "status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The status field is required."
                                                    }
                                                },
                                                "priority": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The priority field is required."
                                                    }
                                                },
                                                "deadline": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The deadline field must be a valid date."
                                                    }
                                                },
                                                "is_recurring": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The is recurring field must be true or false."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete a specific task from a project",
                "operationId": "37ead15c09fec1dc8a52a2aa6119dad9",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "ID of the project",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Task not found in this project."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "success": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Project not found."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            },
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Projects",
            "description": "Projects"
        },
        {
            "name": "Tasks",
            "description": "Tasks"
        }
    ]
}