name: 'Learning Logs'
description: |-

  APIs for managing learning logs related to tasks.
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{project_id}/tasks/{task_id}/learning-logs'
    metadata:
      groupName: 'Learning Logs'
      groupDescription: |-

        APIs for managing learning logs related to tasks.
      subgroup: ''
      subgroupDescription: ''
      title: 'List learning logs for a task'
      description: 'Retrieve all learning logs associated with a specific task in a project.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR ACCESS TOKEN}'
      x-api-key: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project:
        name: project
        description: 'The ID of the project.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task:
        name: task
        description: 'The ID of the task.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 4
      task_id: 3
      project: 17
      task: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Learning logs retrieved successfully",
            "data": [...]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/projects/{project_id}/tasks/{task_id}/learning-logs'
    metadata:
      groupName: 'Learning Logs'
      groupDescription: |-

        APIs for managing learning logs related to tasks.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new learning log for a task'
      description: 'Store a new learning log entry for a specific task.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR ACCESS TOKEN}'
      x-api-key: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project:
        name: project
        description: 'The ID of the project.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task:
        name: task
        description: 'The ID of the task.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 4
      task_id: 3
      project: 17
      task: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: vmqeopfuudtdsufvyvddq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      topic:
        name: topic
        description: 'Must not be greater than 255 characters.'
        required: true
        example: amniihfqcoynlazghdtqt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      summary:
        name: summary
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      duration:
        name: duration
        description: 'The time spent in minutes.'
        required: false
        example: 60
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      resources:
        name: resources
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: 'The learning log description.'
        required: true
        example: '"Read Laravel docs"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: vmqeopfuudtdsufvyvddq
      topic: amniihfqcoynlazghdtqt
      summary: consequatur
      duration: 60
      description: '"Read Laravel docs"'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Learning log created successfully",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{project_id}/tasks/{task_id}/learning-logs/{id}'
    metadata:
      groupName: 'Learning Logs'
      groupDescription: |-

        APIs for managing learning logs related to tasks.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a specific learning log'
      description: 'Retrieve details of a specific learning log for a task.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR ACCESS TOKEN}'
      x-api-key: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the learning log.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project:
        name: project
        description: 'The ID of the project.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task:
        name: task
        description: 'The ID of the task.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      learning_log:
        name: learning_log
        description: 'The ID of the learning log.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 4
      task_id: 3
      id: 2
      project: 17
      task: 17
      learning_log: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Learning log retrieved successfully",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Learning log not found for this task."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/projects/{project_id}/tasks/{task_id}/learning-logs/{id}'
    metadata:
      groupName: 'Learning Logs'
      groupDescription: |-

        APIs for managing learning logs related to tasks.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a learning log'
      description: 'Update the details of a specific learning log for a task.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR ACCESS TOKEN}'
      x-api-key: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the learning log.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project:
        name: project
        description: 'The ID of the project.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task:
        name: task
        description: 'The ID of the task.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      learning_log:
        name: learning_log
        description: 'The ID of the learning log.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 4
      task_id: 3
      id: 2
      project: 17
      task: 17
      learning_log: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: vmqeopfuudtdsufvyvddq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      topic:
        name: topic
        description: 'Must not be greater than 255 characters.'
        required: true
        example: amniihfqcoynlazghdtqt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      summary:
        name: summary
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      duration:
        name: duration
        description: 'The updated duration in minutes.'
        required: false
        example: 90
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      resources:
        name: resources
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: 'The updated description.'
        required: false
        example: '"Watched Laravel video"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: vmqeopfuudtdsufvyvddq
      topic: amniihfqcoynlazghdtqt
      summary: consequatur
      duration: 90
      description: '"Watched Laravel video"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Learning log updated successfully",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Learning log not found for this task."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/projects/{project_id}/tasks/{task_id}/learning-logs/{id}'
    metadata:
      groupName: 'Learning Logs'
      groupDescription: |-

        APIs for managing learning logs related to tasks.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a learning log'
      description: 'Delete a specific learning log from a task.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR ACCESS TOKEN}'
      x-api-key: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the learning log.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project:
        name: project
        description: 'The ID of the project.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task:
        name: task
        description: 'The ID of the task.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      learning_log:
        name: learning_log
        description: 'The ID of the learning log.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 4
      task_id: 3
      id: 2
      project: 17
      task: 17
      learning_log: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: |-
          {
            "success": true,
            "message": "Learning log deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Learning log not found for this task."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
