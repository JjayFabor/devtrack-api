## Autogenerated by Scribe. DO NOT MODIFY.

name: Errors
description: |-

  APIs for managing errors related to tasks.
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{project_id}/tasks/{task_id}/errors'
    metadata:
      groupName: Errors
      groupDescription: |-

        APIs for managing errors related to tasks.
      subgroup: ''
      subgroupDescription: ''
      title: 'List errors for a task'
      description: 'Retrieve all errors associated with a specific task in a project.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR ACCESS TOKEN}'
      x-api-key: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project:
        name: project
        description: 'The ID of the project.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task:
        name: task
        description: 'The ID of the task.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 4
      task_id: 3
      project: 17
      task: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Error list retrieved successfully",
            "data": [...]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/projects/{project_id}/tasks/{task_id}/errors'
    metadata:
      groupName: Errors
      groupDescription: |-

        APIs for managing errors related to tasks.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new error for a task'
      description: 'Store a new error entry for a specific task.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR ACCESS TOKEN}'
      x-api-key: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project:
        name: project
        description: 'The ID of the project.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task:
        name: task
        description: 'The ID of the task.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 4
      task_id: 3
      project: 17
      task: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: vmqeopfuudtdsufvyvddq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      code_snippet:
        name: code_snippet
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      cause:
        name: cause
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      resolution:
        name: resolution
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      severity:
        name: severity
        description: ''
        required: true
        example: low
        type: string
        enumValues:
          - low
          - medium
          - high
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: resolved
        type: string
        enumValues:
          - unresolved
          - resolved
        exampleWasSpecified: false
        nullable: false
        custom: []
      message:
        name: message
        description: 'The error message.'
        required: true
        example: '"Null pointer exception"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      details:
        name: details
        description: 'Additional error details.'
        required: false
        example: '"Stack trace..."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: vmqeopfuudtdsufvyvddq
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      code_snippet: consequatur
      cause: consequatur
      resolution: consequatur
      severity: low
      status: resolved
      message: '"Null pointer exception"'
      details: '"Stack trace..."'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Error created successfully",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{project_id}/tasks/{task_id}/errors/{id}'
    metadata:
      groupName: Errors
      groupDescription: |-

        APIs for managing errors related to tasks.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a specific error'
      description: 'Retrieve details of a specific error for a task.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR ACCESS TOKEN}'
      x-api-key: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the error.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project:
        name: project
        description: 'The ID of the project.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task:
        name: task
        description: 'The ID of the task.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      error:
        name: error
        description: 'The ID of the error.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 4
      task_id: 3
      id: 5
      project: 17
      task: 17
      error: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Error retrieved successfully",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Error not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/projects/{project_id}/tasks/{task_id}/errors/{id}'
    metadata:
      groupName: Errors
      groupDescription: |-

        APIs for managing errors related to tasks.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an error'
      description: 'Update the details of a specific error for a task.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR ACCESS TOKEN}'
      x-api-key: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the error.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project:
        name: project
        description: 'The ID of the project.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task:
        name: task
        description: 'The ID of the task.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      error:
        name: error
        description: 'The ID of the error.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 4
      task_id: 3
      id: 5
      project: 17
      task: 17
      error: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vmqeopfuudtdsufvyvddq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      code_snippet:
        name: code_snippet
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      cause:
        name: cause
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      resolution:
        name: resolution
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      severity:
        name: severity
        description: ''
        required: false
        example: high
        type: string
        enumValues:
          - low
          - medium
          - high
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: unresolved
        type: string
        enumValues:
          - unresolved
          - resolved
        exampleWasSpecified: false
        nullable: false
        custom: []
      message:
        name: message
        description: 'The updated error message.'
        required: false
        example: '"Updated error message"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      details:
        name: details
        description: 'The updated error details.'
        required: false
        example: '"Updated stack trace..."'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: vmqeopfuudtdsufvyvddq
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      code_snippet: consequatur
      cause: consequatur
      resolution: consequatur
      severity: high
      status: unresolved
      message: '"Updated error message"'
      details: '"Updated stack trace..."'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Error updated successfully",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Error not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/projects/{project_id}/tasks/{task_id}/errors/{id}'
    metadata:
      groupName: Errors
      groupDescription: |-

        APIs for managing errors related to tasks.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an error'
      description: 'Delete a specific error from a task.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR ACCESS TOKEN}'
      x-api-key: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the error.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project:
        name: project
        description: 'The ID of the project.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task:
        name: task
        description: 'The ID of the task.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      error:
        name: error
        description: 'The ID of the error.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 4
      task_id: 3
      id: 5
      project: 17
      task: 17
      error: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Error deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Error not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
