## Autogenerated by Scribe. DO NOT MODIFY.

name: Projects
description: |-

  APIs for managing projects.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/projects
    metadata:
      groupName: Projects
      groupDescription: |-

        APIs for managing projects.
      subgroup: ''
      subgroupDescription: ''
      title: 'List all projects'
      description: 'Retrieve a list of all projects for the authenticated user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR ACCESS TOKEN}'
      x-api-key: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Project list retrieved successfully.",
            "data": [...]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/projects
    metadata:
      groupName: Projects
      groupDescription: |-

        APIs for managing projects.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new project'
      description: 'Store a new project for the authenticated user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR ACCESS TOKEN}'
      x-api-key: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the project.'
        required: true
        example: '"My Project"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The project description.'
        required: false
        example: '"A sample project"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      tags:
        name: tags
        description: 'List of tags.'
        required: false
        example:
          - php
          - laravel
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      github_url:
        name: github_url
        description: ''
        required: false
        example: 'http://kunze.biz/iste-laborum-eius-est-dolor.html'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: active
        type: string
        enumValues:
          - planning
          - active
          - paused
          - completed
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"My Project"'
      description: '"A sample project"'
      tags:
        - php
        - laravel
      github_url: 'http://kunze.biz/iste-laborum-eius-est-dolor.html'
      status: active
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "success": true,
            "message": "Project created successfully.",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{id}'
    metadata:
      groupName: Projects
      groupDescription: |-

        APIs for managing projects.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a project'
      description: 'Retrieve details of a specific project.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR ACCESS TOKEN}'
      x-api-key: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project:
        name: project
        description: 'The ID of the project.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 4
      project: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Project retrieved successfully.",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/projects/{id}'
    metadata:
      groupName: Projects
      groupDescription: |-

        APIs for managing projects.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a project'
      description: 'Update the details of a specific project.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR ACCESS TOKEN}'
      x-api-key: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project:
        name: project
        description: 'The ID of the project.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 4
      project: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The updated name.'
        required: false
        example: '"Updated Project"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The updated description.'
        required: false
        example: '"Updated description"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      tags:
        name: tags
        description: 'List of tags.'
        required: false
        example:
          - api
          - backend
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      github_url:
        name: github_url
        description: ''
        required: false
        example: 'http://kunze.biz/iste-laborum-eius-est-dolor.html'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: active
        type: string
        enumValues:
          - planning
          - active
          - paused
          - completed
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Updated Project"'
      description: '"Updated description"'
      tags:
        - api
        - backend
      github_url: 'http://kunze.biz/iste-laborum-eius-est-dolor.html'
      status: active
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Project updated successfully.",
            "data": {...}
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/projects/{id}'
    metadata:
      groupName: Projects
      groupDescription: |-

        APIs for managing projects.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a project'
      description: 'Delete a specific project.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR ACCESS TOKEN}'
      x-api-key: '{YOUR_API_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project:
        name: project
        description: 'The ID of the project.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 4
      project: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Project deleted successfully."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer {YOUR_AUTH_TOKEN}'
    controller: null
    method: null
    route: null
    custom: []
